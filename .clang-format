#https://clang.llvm.org/docs/ClangFormatStyleOptions.html

#############################
# Known issues as of v13.0
#############################
#
# Lambdas are a disaster
## https://bugs.llvm.org/show_bug.cgi?id=27640
#
# Arbitrary empty lines are added unconditionally
## https://stackoverflow.com/questions/55169938/clang-linebreak-after-access-modifier
#
# There's some new issue past 5.0 where indenting the parameters in the call
#  to a constructor in an initializer list of another constructor starts
#  putting in random spaces, because why the fuck not? If you set
#  ContinuationIndentWidth to 2, it fixes it, but then everything else breaks.
#
# Clang-format is still generally a pile of shit that never seems to get
#  updates, and patches just sit around forever without getting traction
#

# Coming soon? (v12.0 release notes)
#IndentPragmas : ???
#BreakBeforeConceptDeclarations : ???

# Coming soon? (v13.0 release notes)
#PointerAligment : ???

BasedOnStyle : Microsoft

AccessModifierOffset : -4
AlignAfterOpenBracket  : DontAlign
AlignArrayOfStructures : None
AlignConsecutiveAssignments : false
AlignConsecutiveBitFields : false
AlignConsecutiveDeclarations : false
AlignConsecutiveMacros : false
AlignEscapedNewlines : DontAlign
AlignOperands : false
AlignTrailingComments : false
AllowAllArgumentsOnNextLine : false
AllowAllConstructorInitializersOnNextLine : false
AllowAllParametersOfDeclarationOnNextLine : false
AllowShortBlocksOnASingleLine : false
AllowShortCaseLabelsOnASingleLine : false
AllowShortEnumsOnASingleLine : false
AllowShortFunctionsOnASingleLine : Empty
AllowShortIfStatementsOnASingleLine : false
AllowShortLambdasOnASingleLine : false
AllowShortLoopsOnASingleLine : false
AlwaysBreakAfterReturnType : None
AlwaysBreakBeforeMultilineStrings : false
AlwaysBreakTemplateDeclarations : No # In some versions this has to be false instead...
AttributeMacros: [] # TODO: Add any special macros here
BinPackArguments : true # But prefer false
BinPackParameters : true # But prefer false
BitFieldColonSpacing : Both
BraceWrapping :
 AfterCaseLabel : true
 AfterClass : true
 AfterControlStatement : true
 AfterEnum : true
 AfterFunction : true
 AfterNamespace : false
 AfterObjCDeclaration : true
 AfterStruct : true
 AfterUnion : true
 AfterExternBlock : true
 BeforeCatch : true
 BeforeElse : true
 BeforeLambdaBody : true # Want to be true, but since Clang-format is trash, this overrides 'AfterNamespace'
 BeforeWhile : false
 IndentBraces : false
 SplitEmptyFunction : false
 SplitEmptyRecord : false
 SplitEmptyNamespace : false
BreakAfterJavaFieldAnnotations : true
BreakBeforeBinaryOperators : None
BreakBeforeBraces : Custom # But basically Allman, exception for namespaces
BreakBeforeTernaryOperators : false
BreakConstructorInitializers : BeforeComma
BreakInheritanceList : AfterColon
BreakStringLiterals : false
ColumnLimit : 0 # But prefer 80 for comments and 120 for code
#CommentPragmas
CompactNamespaces : true
ConstructorInitializerAllOnOneLineOrOnePerLine : true
ConstructorInitializerIndentWidth : 4
ContinuationIndentWidth : 4
Cpp11BracedListStyle : true # This used to fuck up spacing when it was on
DeriveLineEnding : true
DerivePointerAlignment : false
DisableFormat : false
EmptyLineAfterAccessModifier : Leave
EmptyLineBeforeAccessModifier : Leave
#ExperimentalAutoDetectBinPacking
FixNamespaceComments : false
ForEachMacros : [] # TODO: Add any special macros here
IfMacros : [] # TODO: Add any special macros here
IncludeBlocks : Preserve
#IncludeCategories
#IncludeIsMainRegex
#IncludeIsMainSourceRegex
IndentAccessModifiers : false
IndentCaseBlocks : false
IndentCaseLabels : true
IndentExternBlock : NoIndent
IndentGotoLabels : true
IndentPPDirectives : BeforeHash
IndentRequires : false
IndentWidth : 4
IndentWrappedFunctionNames : false
#InsertTrailingCommas
#Java...
KeepEmptyLinesAtTheStartOfBlocks : true
LambdaBodyIndentation : Signature
#Language
#MacroBlockBegin
#MacroBlockEnd
MaxEmptyLinesToKeep : 4
NamespaceIndentation : None
NamespaceMacros : [] # TODO: Add any special macros here
#ObjC...
#Penalty...
PointerAlignment : Left
PPIndentWidth : -1
#RawStringFormats
ReferenceAlignment : Pointer
ReflowComments : false
ShortNamespaceLines : 1
SortIncludes : Never # But prefer CaseInsensitive
SortUsingDeclarations : false
SpaceAfterCStyleCast : false
SpaceAfterLogicalNot : false
SpaceAfterTemplateKeyword : false
SpaceAroundPointerQualifiers : Default
SpaceBeforeAssignmentOperators : true
SpaceBeforeCaseColon : false
SpaceBeforeCpp11BracedList : false
SpaceBeforeCtorInitializerColon : true
SpaceBeforeInheritanceColon : true
SpaceBeforeParens : false
SpaceBeforeRangeBasedForLoopColon : true
SpaceBeforeSquareBrackets : false
SpaceInEmptyBlock : false
SpaceInEmptyParentheses : false
SpacesBeforeTrailingComments : 1
SpacesInAngles : false
SpacesInCStyleCastParentheses : false
SpacesInContainerLiterals : true
SpacesInLineCommentPrefix:
 Minimum : 0
 Maximum : -1
SpacesInParentheses : true
SpacesInSquareBrackets : false
StatementAttributeLikeMacros : [] # TODO: Add any special macros here
Standard : c++17
StatementMacros : [] # TODO: Add any special macros here
TabWidth : 4 # ClangFormat seems to corrupt everything if this isn't 4???
TypenameMacros : [] # TODO: Add any special macros here
UseCRLF : true
UseTab : Always
WhitespaceSensitiveMacros : [] # TODO: Add any special macros here
