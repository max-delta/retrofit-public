#https://clang.llvm.org/docs/ClangFormatStyleOptions.html

#############################
# Known issues as of v8.0
#############################
#
# Lambdas are a disaster
## https://bugs.llvm.org/show_bug.cgi?id=27640
#
# Pre-processor directives suck
## https://bugs.llvm.org/show_bug.cgi?id=36019
#
# Namespaces eat newlines
## https://reviews.llvm.org/rL330324
## (Fixed between 5.0 and 8.0?)
#
# There's some new issue past 5.0 where indenting the parameters in the call
#  to a constructor in an initializer list of another constructor starts
#  putting in random spaces, because why the fuck not? If you set
#  ContinuationIndentWidth to 2, it fixes it, but then everything else breaks.
#
# Clang-format is still generally a pile of shit that never seems to get
#  updates, and patches just sit around forever without getting traction
#

BasedOnStyle : WebKit

AccessModifierOffset : -4
AlignAfterOpenBracket  : DontAlign
AlignConsecutiveAssignments : false
AlignConsecutiveDeclarations : false
AlignEscapedNewlines : DontAlign
AlignOperands : false
AlignTrailingComments : false
AllowAllParametersOfDeclarationOnNextLine : false
AllowShortBlocksOnASingleLine : false
AllowShortCaseLabelsOnASingleLine : false
AllowShortFunctionsOnASingleLine : Empty
AllowShortIfStatementsOnASingleLine : false
AllowShortLoopsOnASingleLine : false
AlwaysBreakAfterReturnType : None
AlwaysBreakBeforeMultilineStrings : false
AlwaysBreakTemplateDeclarations : false # Broken? Should be 'No'?
BinPackArguments : false # But prefer true
BinPackParameters : true
BraceWrapping :
 AfterClass : true
 AfterControlStatement : true
 AfterEnum : true
 AfterFunction : true
 AfterNamespace : false
 AfterObjCDeclaration : true
 AfterStruct : true
 AfterUnion : true
 AfterExternBlock : true
 BeforeCatch : true
 BeforeElse : true
 IndentBraces : false
 SplitEmptyFunction : false
 SplitEmptyRecord : false
 SplitEmptyNamespace : false
BreakAfterJavaFieldAnnotations : true
BreakBeforeBinaryOperators : None
BreakBeforeBraces : Custom # But basically Allman, exception for namespaces
BreakBeforeTernaryOperators : false
BreakConstructorInitializers : BeforeComma
BreakInheritanceList : BeforeComma
BreakStringLiterals : false
ColumnLimit : 0 # But prefer 80 for comments and 120 for code
#CommentPragmas
CompactNamespaces : true
ConstructorInitializerAllOnOneLineOrOnePerLine : true
ConstructorInitializerIndentWidth : 4
ContinuationIndentWidth : 4
Cpp11BracedListStyle : false # This fucks up spacing if it's on
DerivePointerAlignment : false
DisableFormat : false
#ExperimentalAutoDetectBinPacking
FixNamespaceComments : false
#ForEachMacros
IncludeBlocks : Preserve
#IncludeCategories
#IncludeIsMainRegex
IndentCaseLabels : true
IndentPPDirectives : AfterHash # But want BeforeHash (bug 36019)
IndentWidth : 4
IndentWrappedFunctionNames : false
#JavaImportGroups
#JavaScriptQuotes
#JavaScriptWrapImports
KeepEmptyLinesAtTheStartOfBlocks : true
#Language
#MacroBlockBegin
#MacroBlockEnd
MaxEmptyLinesToKeep : 4
NamespaceIndentation : None
#ObjCBinPackProtocolList
#ObjCBlockIndentWidth
#ObjCSpaceAfterProperty
#ObjCSpaceBeforeProtocolList
#PenaltyBreakAssignment
#PenaltyBreakBeforeFirstCallParameter
#PenaltyBreakComment
#PenaltyBreakFirstLessLess
#PenaltyBreakString
#PenaltyBreakTemplateDeclaration
#PenaltyExcessCharacter
#PenaltyReturnTypeOnItsOwnLine
PointerAlignment : Left
#RawStringFormats
ReflowComments : false
SortIncludes : false # But prefer true
SortUsingDeclarations : false
SpaceAfterCStyleCast : false
SpaceAfterTemplateKeyword : false
SpaceBeforeAssignmentOperators : true
SpaceBeforeCpp11BracedList : false
SpaceBeforeCtorInitializerColon : true
SpaceBeforeInheritanceColon : true
SpaceBeforeParens : false
SpaceBeforeRangeBasedForLoopColon : true
SpaceInEmptyParentheses : false
SpacesBeforeTrailingComments : 1
SpacesInAngles : false
SpacesInCStyleCastParentheses : false
SpacesInContainerLiterals : true
SpacesInParentheses : true
SpacesInSquareBrackets : false
Standard : Cpp11
#StatementMacros
TabWidth : 4 # ClangFormat seems to corrupt everything if this isn't 4???
UseTab : Always
