
trigger:
- master

strategy:
  matrix:

    msvc-x86-debug:
      buildPlatform: 'x86'
      buildConfiguration: 'MSVC_Debug'
      buildTool: 'MSVC'
    msvc-x86-release:
      buildPlatform: 'x86'
      buildConfiguration: 'MSVC_Release'
      buildTool: 'MSVC'
    msvc-x86-retail:
      buildPlatform: 'x86'
      buildConfiguration: 'MSVC_Retail'
      buildTool: 'MSVC'

    msvc-x64-debug:
      buildPlatform: 'x64'
      buildConfiguration: 'MSVC_Debug'
      buildTool: 'MSVC'
    msvc-x64-release:
      buildPlatform: 'x64'
      buildConfiguration: 'MSVC_Release'
      buildTool: 'MSVC'
    msvc-x64-retail:
      buildPlatform: 'x64'
      buildConfiguration: 'MSVC_Retail'
      buildTool: 'MSVC'

    msvc-arm-debug:
      buildPlatform: 'ARM'
      buildConfiguration: 'MSVC_Debug'
      buildTool: 'MSVC'
    msvc-arm-release:
      buildPlatform: 'ARM'
      buildConfiguration: 'MSVC_Release'
      buildTool: 'MSVC'
    msvc-arm-retail:
      buildPlatform: 'ARM'
      buildConfiguration: 'MSVC_Retail'
      buildTool: 'MSVC'

    msvc-arm64-debug:
      buildPlatform: 'ARM64'
      buildConfiguration: 'MSVC_Debug'
      buildTool: 'MSVC'
    msvc-arm64-release:
      buildPlatform: 'ARM64'
      buildConfiguration: 'MSVC_Release'
      buildTool: 'MSVC'
    msvc-arm64-retail:
      buildPlatform: 'ARM64'
      buildConfiguration: 'MSVC_Retail'
      buildTool: 'MSVC'

    llvm-x86-debug:
      buildPlatform: 'x86'
      buildConfiguration: 'LLVM_Debug'
      buildTool: 'LLVM'
    llvm-x86-release:
      buildPlatform: 'x86'
      buildConfiguration: 'LLVM_Release'
      buildTool: 'LLVM'
    llvm-x86-retail:
      buildPlatform: 'x86'
      buildConfiguration: 'LLVM_Retail'
      buildTool: 'LLVM'

    llvm-x64-debug:
      buildPlatform: 'x64'
      buildConfiguration: 'LLVM_Debug'
      buildTool: 'LLVM'
    llvm-x64-release:
      buildPlatform: 'x64'
      buildConfiguration: 'LLVM_Release'
      buildTool: 'LLVM'
    llvm-x64-retail:
      buildPlatform: 'x64'
      buildConfiguration: 'LLVM_Retail'
      buildTool: 'LLVM'

#    llvm-arm-debug:
#      buildPlatform: 'ARM'
#      buildConfiguration: 'LLVM_Debug'
#      buildTool: 'LLVM'
#    llvm-arm-release:
#      buildPlatform: 'ARM'
#      buildConfiguration: 'LLVM_Release'
#      buildTool: 'LLVM'
#    llvm-arm-retail:
#      buildPlatform: 'ARM'
#      buildConfiguration: 'LLVM_Retail'
#      buildTool: 'LLVM'

#    llvm-arm64-debug:
#      buildPlatform: 'ARM64'
#      buildConfiguration: 'LLVM_Debug'
#      buildTool: 'LLVM'
#    llvm-arm64-release:
#      buildPlatform: 'ARM64'
#      buildConfiguration: 'LLVM_Release'
#      buildTool: 'LLVM'
#    llvm-arm64-retail:
#      buildPlatform: 'ARM64'
#      buildConfiguration: 'LLVM_Retail'
#      buildTool: 'LLVM'

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'retrofit.sln'

steps:

#
# Prepare
#

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

#
# Build
#

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:RFBuildMachine=Azure /p:RFBuildStampSource=$(Agent.MachineName)'

#
# Publish
#

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '_artifacts'
    ArtifactName: 'artifacts'
    publishLocation: 'Container'

#
# Test
#

- task: CmdLine@2
  condition: eq(variables['buildPlatform'], 'x64')
  timeoutInMinutes: 1
  inputs:
    script: 'core_test.exe --nopause'
    workingDirectory: '_artifacts/$(buildPlatform)/$(buildConfiguration)/Out/'
    failOnStderr: true

- task: CmdLine@2
  condition: eq(variables['buildPlatform'], 'x64')
  timeoutInMinutes: 1
  inputs:
    script: 'foundation_test.exe --nopause'
    workingDirectory: '_artifacts/$(buildPlatform)/$(buildConfiguration)/Out/'
    failOnStderr: true

#
# Analysis
#

- task: VSBuild@1
  condition: and( eq(variables['buildPlatform'], 'x64'), eq(variables['buildTool'], 'MSVC') )
  continueOnError: true
  timeoutInMinutes: 60
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:RFBuildMachine=Azure /p:RFCodeAnalysis=true'
