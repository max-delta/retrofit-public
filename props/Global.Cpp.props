<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<ItemDefinitionGroup>
		<ClCompile>
			<!--Disable exception handling, prefer to just crash instead-->
			<ExceptionHandling>false</ExceptionHandling>

			<!--Complains that exceptions aren't enabled, don't care-->
			<DisableSpecificWarnings>4577; %(DisableSpecificWarnings)</DisableSpecificWarnings>

			<!--Complains about subtle DLL logic. Would like to have on, but the warning is flawed-->
			<DisableSpecificWarnings>4275; %(DisableSpecificWarnings)</DisableSpecificWarnings>

			<!--MS STL implementation gets pissy if this define isn't set-->
			<PreprocessorDefinitions>_HAS_EXCEPTIONS=0; %(PreprocessorDefinitions)</PreprocessorDefinitions>

			<!--C++17 for now, C++20 isn't ready yet-->
			<LanguageStandard>stdcpp17</LanguageStandard>

			<!--This is sometimes futzy and can cause corruption, but corruption
				seems to be mostly limited to batch builds (batch_build.bat avoids
				the associated problems)-->
			<MultiProcessorCompilation>true</MultiProcessorCompilation>

			<!--Eh... the additional runtime cost is trivial and the checks are nice-->
			<SDLCheck>true</SDLCheck>

			<!--Checks on uninitialized variables and stack corruption (incompatible
				with most optimizations, according to documentation)-->
			<BasicRuntimeChecks Condition="'$(RFConfig)'!='Debug'">Default</BasicRuntimeChecks>
			<BasicRuntimeChecks Condition="'$(RFConfig)'=='Debug'">EnableFastChecks</BasicRuntimeChecks>

			<!--This just pollutes the assembly and has low value-->
			<SupportJustMyCode>false</SupportJustMyCode>
		</ClCompile>

		<ClCompile Condition="'$(RFCompiler)'=='MSVC'">
			<!--Avoid MS-specific hacks since we're cross-platform-->
			<ConformanceMode>true</ConformanceMode>
		</ClCompile>

		<ClCompile Condition="'$(RFCompiler)'=='LLVM'">
			<!-- ClangCL sometimes lags behind on new CL features -->
			<AdditionalOptions>
				-Wno-unused-command-line-argument
				%(AdditionalOptions)
			</AdditionalOptions>

			<!-- Disable compat with ancient versions of C++ -->
			<AdditionalOptions>
				-Wno-c++98-compat
				-Wno-c++98-compat-pedantic
				%(AdditionalOptions)
			</AdditionalOptions>

			<!-- Azure build machines violate this when forced includes are used -->
			<AdditionalOptions Condition="'$(RFBuildMachine)'=='Azure'">
				-Wno-nonportable-include-path
				%(AdditionalOptions)
			</AdditionalOptions>
		</ClCompile>

		<Lib/>

		<Link>
			<!--Want full PDBs so third-party tools work better-->
			<GenerateDebugInformation>DebugFull</GenerateDebugInformation>
		</Link>
	</ItemDefinitionGroup>

	<ItemGroup Condition="'$(ProjectName)'!='hook_new'">
		<!-- Link hook lib with everything, to allow for hooks during linking -->
		<ProjectReference Include="$(SolutionDir)libs\hook_new\hook_new.vcxproj">
			<Project>{A5B5EDE9-82A2-4B25-BB9D-D2B2FEFDF489}</Project>
		</ProjectReference>
	</ItemGroup>

</Project>