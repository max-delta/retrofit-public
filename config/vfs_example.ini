# All characters between strides of # and '\n' are treated as a comment token, and ignored
# All characters between strides of "//" and "//" are treated as a meaningful token, and processed
	 # ' ', '\t', '\r', and '\n' are ignored between tokens
# If you're a terrible person, you should be able to put all sorts of
#  terrifying symbols in your path, but you probably should avoid that...
#
# Mount format:
#   //<type>//  //<ro|rw|rx>//  //<virtual>//  //<target>//
#
# Example (Windows):
#   //mount_abs//  //rw//  //MyVirtualAssets//  //C:/MyGame/MyRealMods//
#   //mount_abs//  //ro//  //MyVirtualAssets//  //C:/MyGame/MyRealAssets//
#   //mount_abs//  //rx//  //MyVirtualDLLs//  //C:/MyGame/MyVirtualDLLs//
#   //mount_usr//  //rw//  //MyVirtualSaves//  //MyRealSaves//
#   //mount_usr//  //rw//  //MyVirtualEngineConfigs//  //MyRealConfig//
#   //mount_rel//  //ro//  //MyVirtualEngineConfigs//  ////
#
# Example (Linux):
#   //mount_abs//  //rw//  //MyVirtualAssets//  //usr/bin/MyGame/MyRealMods//
#   //mount_abs//  //ro//  //MyVirtualAssets//  //usr/bin/MyGame/MyRealAssets//
#   //mount_abs//  //rx//  //MyVirtualLibs//  //usr/lib/MyGame/MyVirtualLibs//
#   //mount_usr//  //rw//  //MyVirtualSaves//  //MyRealSaves//
#   //mount_usr//  //rw//  //MyVirtualEngineConfigs//  //MyRealConfig//
#   //mount_rel//  //ro//  //MyVirtualEngineConfigs//  ////
#
# //mount_abs// - maps virtual onto absolute (Note '/' prefix is implicit on Linux)
# //mount_usr// - maps virtual onto application-determined 'user' directory
# //mount_rel// - maps virtual onto path relative to this config file
# //ro//        - Read-only
# //rw//        - Read/write
# //rx//        - Read/execute
# //<virtual>// - The virtual path, a '/' is treated as a path-element delimiter
# //<target>//  - The target path, a '/' is treated as a path-element delimiter
#
# In //mount_rel// only, a ".." element in a path causes an ascencion. This is
#  only permitted at the front of the path, but multiple occurences at the
#  front are permitted if seperated by '/' delimiters (//../../../MyDir//)
#
# Mount points can overlap. The earliest mount rule that matches a request
#  takes precedence. For example, a game can be configured to map a read-only
#  directory tree of assets, but also map a higher-precedence parallel
#  read-write directory tree of mods to the same virtual location. Any reads
#  will check the mods, but fallback to the normal assets. All writes will go
#  only to the mods directory tree.
#
# Mount tables have priorities. This is not visible in the configuration files,
#  but is assigned internally by the application to allow it to protect certain
#  important mounts from being modified. For example, a game may wish to make
#  certain folders unmoddable.

//mount_rel//  //ro//  //assets//  //../data//                    # Stock assets
//mount_rel//  //ro//  //config//  ////                           # Config
//mount_rel//  //rw//  //scratch// //../_scratch//                # Scratch-space
//mount_usr//  //rw//  //user//    ////                           # User stuff
